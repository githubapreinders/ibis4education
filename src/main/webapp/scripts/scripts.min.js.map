{"version":3,"sources":["scripts.min.js"],"names":["app","angular","module","config","$stateProvider","$urlRouterProvider","state","url","views","content","templateUrl","controller","content@","otherwise","$scope","$interval","$timeout","$uibModal","xmlTag","attributeObject","StaticDataFactory","StorageFactory","EditorFactory","ValidationFactory","IafFactory","ZipService","ModeratorFactory","toggleTab","thetab","vm","showeditor","showauth","elem","document","getElementById","classList","toggle","theothers","_","without","thetabs","forEach","el","ele","remove","saveInSlot","getTimerId","timerId","showSpinnerSmall","thekey","getGetter","getCurrentKey","title","getSetter","thedocument","getValue","setTimerId","toggleSpinner","showSpinner","sendZip","then","res","style","background","err","setCredentials","iaf_url","username","password","resp","navigatorModel","JSON","parse","data","JSONMONSTER","MYMONSTER","toggle_datasource","showCredentialsDialog","modalInstance","open","size","resolve","items","result","validateXml","currentKey","validationMessage","changeFontSize","ed","getElementsByClassName","fontSize","selectedFontSize","toString","getEditor","_editor","editor","editorLoaded","getDoc","undefined","getJson","response","setOption","schemaInfo","foldCode","CodeMirror","Pos","lineCount","showNav","showConf","initialise","retrieveData","toggleReadonly","akey","setReadonly","isLocked","val","unlock","changeTheme","selectedTheme","modifyAlias","slotn","newname","toggleSlot","key","switchKey","$broadcast","storeData","myalias","myvalue","mykey","alias","setValue","navigator","showConfig","left","navItem","picture","iplogo","showNavigator","width","top","add","setSelectedClass","item","selectedItem","setSelectedItem","selectedProperties","i","properties","length","checkbox","click","thetype","setDataSource","datasource","getDataSource","showPropertyDescription","done","parking","Object","keys","type","clearEditor","getOption","setCursor","line","lastLine","ch","focus","styleEditorContent","isTheBetter","newpos","oldpos","standard","linedifference1","Math","abs","linedifference2","chardifference1","chardifference2","pos","getCursor","before","getRange","beforesegment","match","after","aftersegment","cursor","getSearchCursor","counter","original","myindex","find","newval","to","settings","getFormattingSettings","html_beautify","checkDefaults","property","Array","submitForm","replaceSelection","xml","theproperties","push","newtag","classname","toCompleteTag","this","codemirrorLoaded","message","userInput","showFullEditor","showValidationMessage","themes","getThemes","fontSizes","getFontSizes","availableLessons","$on","cancel","$uibModalInstance","submitCredentials","close","vm4","closeModal","dismiss","filter","filtered","sort","a","b","x","toLowerCase","y","newstring","replace","newerstring","directive","restrict","link","scope","attrs","bind","event","traverseArray","sublist","id","digit","theobject","element","siblings","$parentNodesScope","$modelValue","s","text","innerHTML","cropFilter","theslot","vm2","mySlots","oldalias","changeKeys","myslots","setAttribute","$apply","list","nodes","helper","substring","lastIndexOf","target","thelist","code","which","keyCode","eventt","charCode","preventDefault","blur","heading","itemnumber","elemt","input","checked","value","require","ngModel","read","$setViewValue","html","$render","$viewValue","oldvalue","vm3","selectedProperty","newvalue","theattrs","defineProperty","getOwnPropertyDescriptor","dataModel","postJsonBulk","description","checkForXml","loadXml","addNewClass","newProperty","addingProperty","addingItem","otherSlot","currentSlotNumber","myslot","changeAttr","index","addProperty","string","propname","propdes","propdef","unshift","deleteProperty","splice","showModel","windowClass","postDatamonster","confirmDelete","animation","backdrop","deleteItem","stopTimer","getStaticJson","getSelectedItem","vm5","stringify","vm6","factory","$http","setAvailableLesson","availableLesson","getAvailableLessons","json","post","API_URL","postSchema","datamonster","thetag","method","IAF_URL","headers","content-type","postTag","tag","constant","setIafUrl","timerid","formattingSettings","get","thejson","indent_size","end_with_newline","js","css","preserve-newlines","DOWNLOAD_URL","UPLOAD_URL","PROJECTNAME","init","getSlots","getMySlots","saveas","Promise","reject","zip","JSZip","elements","querySelectorAll","object","parents","$parentNodeScope","filename","pop","isDirectory","folder","file","timestamp","Date","now","generateAsync","myzip","blob","Blob","saveAs","postConfig","finalurl","fileName","fd","FormData","append","Content-type","getZipFromFile","loadAsync","storeZip","myzipfiles","async","newslotname","ceil","random","name","isParent","possibleparent","candidate","deleteAll","relativePath","indexOf","myjson","dir","myobj","val1","val2","split","parentsfound","copy","j","getZip","finalUrl","responseType","setCurrentKey","storage","$log","oldname","islocked","thekeys","getKeys","shift","getNewSlotname","createdAlias","theid","2","createKeys","getAliases","output","thealiases","verifyKey","api","setter","getter","isUndefined","Error","hasOwnProperty","createAPIForKey","createSetter","createGetter","isDefined","set","error","info","completeAfter","cm","pred","setTimeout","completionActive","showHint","completeSingle","Pass","completeIfAfterLt","cur","completeIfInTag","tok","getTokenAt","test","charAt","inner","innerMode","getMode","tagName","bothTags","extraKeys","'<'","'/'","' '","'='","Ctrl-Space","windowheight","window","innerHeight","navbarheight","offsetHeight","querySelector","height","server","uname","pw","showZipDialog","rendered","zipfromfile","addEventListener","returntype","files","setSelectedSlot","saveToFile","addFileOrFolder","newobject","floor","createRandomSuffix","$emit","selectedSlot","changeName","textnode","firstChild","caret","range","createRange","setStart","setEnd","sel","getSelection","removeAllRanges","addRange","deleteFromLocalStorage","itsid","thealias","deleteContainingFiles","findResults","results","array","$childNodesScope","getRoot","obj","ok","lookForDirectory","callerid","nodetype","currentLayer","newSubitem","theitem","thetitle","suffixes","randomdigit","letter","treeOptions","$watch","getZipOverHttp","elementname","proparray","tagType","elementName","tagProperties","prop","getAttributeName","getAttributeValues","staticPipenames","prototype","getTagType","setTagType","astring","returnstring","itsproperties","convertToPipe","toObject","setProperty","getPropertyValue","search","includes","attributename","values","hasDefault","setAttributeValue","unShift","insertValues","setDefaultValue","bool","join"],"mappings":"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","file":"scripts.min.js","sourcesContent":["(function()\n{\n    var app = angular.module('confab',['ngAnimate','ui.bootstrap','ui.tree', 'ui.router', 'ui.codemirror','ngCookies','angularLocalStorage']);\n\n\napp.config(function ($stateProvider, $urlRouterProvider)\n{\n    void 0;\n    $stateProvider\n\n        // route for the home p age\n        .state('app', {\n            url: '/',\n            views: {\n                'content': {\n                    templateUrl: 'views/home.html',\n                    controller: 'IndexController as vm'\n                }\n            }\n        })\n        .state('app.moderator', {\n            url:'moderator',\n            views: {\n                'content@': {\n                    templateUrl : 'views/moderator.html',\n                    controller  : 'ModeratorController as vm3'\n                }\n            }\n        });\n    $urlRouterProvider.otherwise('/');\n\n    \n});\n\n})();\n(function (){\n    'use strict';\n\n    angular.module('confab')\n        .controller('IndexController', function ($scope, $interval, $timeout, $uibModal, xmlTag, attributeObject, StaticDataFactory, StorageFactory, EditorFactory, ValidationFactory, IafFactory, ZipService,ModeratorFactory)\n        {\n\n            void 0;\n            var vm = this;\n        \n            //Functions\n            vm.submitForm = submitForm;\n            vm.codemirrorLoaded = getEditor;\n            vm.setSelectedClass = setSelectedClass;\n            vm.toggle_datasource = toggle_datasource;\n            vm.styleEditorContent = styleEditorContent;\n            vm.clearEditor = clearEditor;\n            vm.showNav = showNav;\n            vm.showConf = showConf;\n            vm.storeData = storeData;\n            vm.retrieveData = retrieveData;\n            vm.toggleSlot = toggleSlot;\n            vm.modifyAlias = modifyAlias;\n            vm.checkDefaults = checkDefaults;\n            vm.changeTheme = changeTheme;\n            vm.changeFontSize = changeFontSize;\n            vm.validateXml = validateXml;\n            vm.sendZip = sendZip;\n            vm.toggleSpinner = toggleSpinner;\n            vm.setCredentials = setCredentials;\n           // vm.setAvailableLesson = setAvailableLesson;\n            vm.toggleReadonly = toggleReadonly;\n            vm.unlock = unlock;\n\n            //Static values\n            vm.message = \"Angular Controller is working allright...\";\n            vm.userInput = \"\";\n            vm.datasource = StaticDataFactory.getDataSource();\n            vm.navigatorModel = null;\n            vm.selectedItem = null;\n            vm.showPropertyDescription = false;\n            vm.selectedProperties = {};\n            vm.showConfig = false;\n            vm.showNavigator = true;\n            vm.showFullEditor = false;\n            var editor = null;\n            var thedocument = null;    \n            vm.timerId = null;\n            vm.showValidationMessage = false;\n            vm.validationMessage = null;\n            vm.currentKey = StorageFactory.getCurrentKey();\n            vm.iaf_url = StorageFactory.getGetter(\"IAF_URL\")();\n\n\n            //Editor Styling\n            vm.themes = StaticDataFactory.getThemes();\n            vm.selectedTheme = \"twilight\";\n            vm.selectedFontSize = 14;\n            vm.fontSizes = StaticDataFactory.getFontSizes();\n            \n            vm.availableLessons = [];\n\n            //tabs control\n            vm.toggleTab = toggleTab;\n            vm.thetabs=[\"tabauth\", \"tabedit\"];\n            toggleTab('tabauth');//initializing\n\n            function toggleTab(thetab)\n            {   \n                switch(thetab)\n                {\n                    case(\"tabauth\"):{vm.showeditor = false;vm.showauth = true;break;}\n                    case(\"tabedit\"):{vm.showeditor = true;vm.showauth = false;break;}\n                }\n\n                var elem = document.getElementById(thetab);\n                elem.classList.toggle('active1');\n                var theothers = _.without(vm.thetabs, thetab);\n                theothers.forEach(function(el)\n                {\n                    var ele =  document.getElementById(el);\n                    ele.classList.remove('active1');\n                });\n                void 0;\n\n            }\n\n            function setAvailableLesson(which)\n            {\n                ModeratorFactory.setAvailableLesson(which);\n            }\n\n            //saves editor content in the localstorage slot that is open every 5 seconds, spinner indicates that \n            function saveInSlot()\n            {\n                if (StaticDataFactory.getTimerId() !== 0 )\n                {\n                    void 0;\n                 return;\n                }//avoiding running two timers...\n                \n                void 0;\n                vm.timerId = $interval(function()\n                {\n                    vm.showSpinnerSmall = true;\n                    $timeout(function()\n                    {\n                        vm.showSpinnerSmall = false;\n                    }, 1000);\n                    var thekey = StorageFactory.getGetter(StorageFactory.getCurrentKey().title)();\n                    void 0;\n                    StorageFactory.getSetter(thekey)(thedocument.getValue());\n                }, 5000);\n                StaticDataFactory.setTimerId(vm.timerId);\n            }\n\n\n\n            $scope.$on('$destroy', function()\n            {\n                void 0;\n                $interval.cancel();\n            });\n\n            //setting the editor content after a new file has been chosen to edit\n            $scope.$on(\"Keychange\", function()\n            {\n                vm.currentKey = StorageFactory.getCurrentKey();\n                void 0;\n                retrieveData(vm.currentKey);\n                toggleReadonly(vm.currentKey);\n            });\n\n\n            // after a switch in focus, saving the work that is just made\n            $scope.$on('saveOldValues',function()\n            {\n                    vm.showSpinnerSmall = true;\n                    $timeout(function()\n                    {\n                        vm.showSpinnerSmall = false;\n                    }, 1000);\n                    var thekey = StorageFactory.getGetter(StorageFactory.getCurrentKey().title)();\n                    void 0;\n                    StorageFactory.getSetter(thekey)(thedocument.getValue());\n            });\n\n            function cropFilter(item)\n            {\n                if(item === undefined) return \"\";\n                var helper = item.substring(item.lastIndexOf('/') + 1 ,item.length);\n                if(helper.length > 0)\n                {\n                    return helper;\n                }\n                else\n                {\n                    return item;\n                }\n            }\n\n            \n            //show a spinner while waiting for a response\n            function toggleSpinner()\n            {\n                vm.showSpinner = !vm.showSpinner;\n            }\n\n            //send the current configuration to the framework.\n            function sendZip()\n            {   \n                toggleSpinner();\n                //saving the current file before uploading it...\n                var thekey = StorageFactory.getGetter(StorageFactory.getCurrentKey().title)();\n                void 0;\n                StorageFactory.getSetter(thekey)(thedocument.getValue());\n                ZipService.sendZip().then(function succes(res)\n                {\n                    toggleSpinner();\n                    var el = document.getElementById('sendstatus');\n                    el.style.background = 'green';\n                    $timeout(function()\n                        {\n                            el.style.background = 'none';\n                        }, 5000);\n                    void 0;\n                },function failure(err)\n                {\n                    var el = document.getElementById('sendstatus');\n                    el.style.background = 'red';\n                    toggleSpinner();\n                   $timeout(function()\n                   {\n                            el.style.background = 'none';\n                        }, 5000);\n                    void 0;\n                });\n            }\n\n            function setCredentials()\n            {\n                void 0;\n                IafFactory.setCredentials(vm.iaf_url, vm.username, vm.password).then(\n                function succes(resp)\n                {\n                    void 0;    \n                    vm.navigatorModel = JSON.parse(resp.data.JSONMONSTER.MYMONSTER);\n                    toggle_datasource('pipes');\n                },\n                function fail(err)\n                {\n\n                });\n            }\n\n\n            function showCredentialsDialog()\n            {\n\n                var modalInstance = $uibModal.open(\n                {\n                    templateUrl : \"./views/modalcredentials.html\",\n                    controller : \"LoadCredentialsController as vm4\",\n                    size : \"md\",\n                    resolve : {items : function ()\n                        {\n                            return \"something\";\n                        }}\n                });\n\n                modalInstance.result.then(\n                function success(resp)\n                {\n                    void 0;\n                    vm.iaf_url = resp.iaf_url;\n                    vm.username = resp.username;\n                    vm.password = resp.password;\n                    setCredentials();\n\n\n                }\n                ,function failure(err)\n                {\n                    void 0;\n                });\n            }\n\n\n\n            function postSnippet()\n            {\n                StaticDataFactory.postSnippet(vm.currentKey.title).then(function (res)\n                {\n                    void 0;\n                },\n                function (err)\n                {\n                    void 0;\n                });\n            }\n\n\n\n\n\n            function validateXml()\n            {\n                toggleSpinner();\n                ValidationFactory.validateXml(vm.currentKey.title).then\n                (\n                    function success(res)\n                    {\n                        vm.validationMessage = res;\n                        toggleSpinner();\n                        void 0;\n                    }, \n                    function failure(err)\n                    {\n                        toggleSpinner();\n                    }\n                );\n                \n            }\n\n            function changeFontSize()\n            {   \n                var ed = document.getElementsByClassName('CodeMirror')[0];\n                ed.style.fontSize = vm.selectedFontSize.toString() + 'px';\n            }\n\n            //initialisation of editor(triggered by attribute in home.html), datamodel, and cache\n            function getEditor(_editor)\n            {\n                editor = EditorFactory.editorLoaded(_editor);\n                thedocument = editor.getDoc();\n                if(StorageFactory.getGetter('IAF_URL')() === null || StorageFactory.getGetter('IAF_URL')() === undefined)\n                {\n                    showCredentialsDialog();\n                }\n\n                else\n                {\n                    StaticDataFactory.getJson().then(\n                    function success(response)\n                    {\n                        vm.navigatorModel = JSON.parse(response.data.JSONMONSTER.MYMONSTER);\n                        void 0;\n                        editor.setOption('hintOptions', {schemaInfo: vm.navigatorModel});\n                        editor.foldCode(CodeMirror.Pos(0,0));\n                        editor.foldCode(CodeMirror.Pos(thedocument.lineCount(),0));\n                        toggle_datasource('pipes');\n                        showNav(); \n                        showConf();\n                        showConf();\n\n                    \n                        //initialising the cache and loading it in the editor;\n                        var avalue = StorageFactory.initialise();\n                        retrieveData();\n                        saveInSlot();\n\n                    },function error(response)\n                    {\n                        void 0;\n                    });\n                }\n                \n            }\n\n            //receiving object\n            function toggleReadonly(akey)\n            {\n                void 0;\n                setReadonly(akey.isLocked);\n            }\n\n            function setReadonly(val)\n            {\n                editor.setOption('readOnly', val);\n            }\n\n            function unlock(akey)\n            {\n                setReadonly(false);\n            }\n\n            function changeTheme()\n            {\n                editor.setOption('theme', vm.selectedTheme);\n            }\n                \n            //responds to change of the slotname : internally the slotnames are slot1, slot2...etc,\n            //externally a user can choose any alias he wants.\n            function modifyAlias(slotn, newname)\n            {\n                void 0;\n                StorageFactory.getSetter(slotn)(newname);\n            }\n\n            //console.log(\"retrieved keys\",StorageFactory.getKeys());\n            \n            function toggleSlot()\n            {\n                // console.log(\"slot: \", typeof (slot) , vm.currentSlotNumber);\n                //opening a slot from the key item in the navigator\n                vm.showSpinnerSmall = true;\n                $timeout(function()\n                {\n                    vm.showSpinnerSmall = false;\n                }, 1000);\n\n                //$scope.$emit('saveOldValues');\n\n                // console.log(\"saving \", StorageFactory.getCurrentKey().title);\n                // var thekey = StorageFactory.getGetter(StorageFactory.getCurrentKey().title)();\n                // StorageFactory.getSetter(thekey)(thedocument.getValue());\n\n\n\n                void 0;\n                var key = StorageFactory.switchKey();\n                void 0;\n                $scope.$broadcast('KeySwitch',key);\n                retrieveData(key);\n                //setReadonly(vm.theslots[vm.currentSlotNumber-1].locked);\n                // console.log(\"Current slotprops:\",vm.theslots[vm.currentSlotNumber-1]);\n            }\n\n            function storeData()\n            {\n                var myalias = StorageFactory.getCurrentKey().title;\n                var myvalue = thedocument.getValue();\n                var mykey = StorageFactory.getGetter(myalias)();\n                void 0;\n                StorageFactory.getSetter(mykey)(myvalue);\n            }\n\n            // key is an object\n            function retrieveData(alias)\n            {\n                if(alias === undefined)\n                {\n                    alias = StorageFactory.getCurrentKey();\n                }\n                void 0;\n                if(StorageFactory.getGetter(alias.title)() === undefined)\n                {\n                    $timeout(function() \n                    {\n                        void 0;\n                        var thekey = StorageFactory.getGetter(alias.title)();\n                        // console.log(\"retrieving data , setting the document value...\", StorageFactory.getGetter(thekey)());\n                        thedocument.setValue(StorageFactory.getGetter(thekey)());\n                    }, 50);\n                }\n                else\n                {\n                    var thekey = StorageFactory.getGetter(alias.title)();\n                    // console.log(\"retrieving data and setting the document value...\", StorageFactory.getGetter(thekey)());\n                    thedocument.setValue(StorageFactory.getGetter(thekey)());\n                }\n                if(StaticDataFactory.getTimerId() === 0 )\n                {\n                    saveInSlot();\n                }\n            }\n\n            //toggles the configuration menu in the left area;\n            function showConf()\n            {\n                var navigator = document.getElementById('navigatorcontainer');\n                 \n                if(vm.showConfig)\n                {\n                  navigator.style.left = \"0%\";\n                }\n                else\n                {\n                  navigator.style.left = '-25%';\n                }\n                vm.showConfig = !vm.showConfig;\n            }\n                \n\n              //toggles the editor area to 75 or 100%\n              function showNav()\n              {\n                var editor = document.getElementById('editorcontainer');\n                var navItem = document.getElementById('navItem');\n                var picture = document.getElementById('picture');\n                var iplogo = document.getElementById('iplogo');\n                \n                if(!picture || !navItem || !editor){return;}\n\n\n                if(vm.showNavigator)\n                {\n                  editor.style.width = '75%';\n                  editor.style.left = '25%';\n                  iplogo.style.top = '10px';\n                  navItem.style.left = '89%';\n                  picture.classList.add('fa-toggle-left');\n                  picture.classList.remove('fa-toggle-right');\n                }\n                else\n                {\n                  editor.style.width = '100%';\n                  editor.style.left = '0%';\n                  navItem.style.left = '0%';\n                  iplogo.style.top = '10px';\n                  picture.classList.remove('fa-toggle-left');\n                  picture.classList.add('fa-toggle-right');\n                }\n                vm.showNavigator = !vm.showNavigator;\n              }\n\n           \n\n\n            //responds to the selection of an item in the class Area;\n            function setSelectedClass(item)\n            {\n                vm.selectedItem = item;\n                StaticDataFactory.setSelectedItem(item);\n                vm.selectedProperties = {};\n                \n                //checking a default classname property\n                for(var i=0 ; i<item.properties.length; i++)\n                {\n                    if(item.properties[i][0]=='classname' || item.properties[i][0]=='className')\n                    {\n                        var checkbox = document.getElementById('checkbox' + i);\n                        if(checkbox === null)\n                        {\n                            break;\n                        }\n                        checkbox.click();\n                        break;\n                    }\n                }\n\n            }\n\n\n\n            //responds to the radiobuttons in the dataSource area and switches to pipe, receiver, snippet or general; the first item of \n            //the chosen type is selected.\n            function toggle_datasource(thetype)\n            {\n                StaticDataFactory.setDataSource(thetype);\n                vm.datasource = StaticDataFactory.getDataSource();\n                vm.showPropertyDescription = false;\n                \n                var done = false;\n                var parking = \"zzz\";\n                Object.keys(vm.navigatorModel).forEach(function(key)\n                {\n                    if (!done && vm.navigatorModel[key].type === thetype )\n                    {\n                        if (key < parking)\n                        {\n                            parking = key;\n                        }\n                        //vm.selectedItem = vm.navigatorModel[key];\n                        //vm.selectedProperties = {};\n                    }\n                });\n                setSelectedClass(vm.navigatorModel[parking]);\n\n\n                // console.log(\"vm.datasource\", vm.datasource);\n            }\n\n            //empties the editor\n            function clearEditor()\n            {\n                if(editor.getOption('readOnly') === true)\n                {\n                    return;\n                }\n                thedocument.setValue(\"<?xml version='1.0' encoding='UTF-8'?>\\n\");\n                thedocument.setCursor({line:thedocument.lastLine(),ch:0});\n                editor.focus();\n            }\n\n            //Responding to the style button in the navbar\n            function styleEditorContent()\n            {\n                //get the currunt cursor position of the editor; check between which values that is and look that up\n                // after reformatting the text to replace the cursor.\n                var pos = thedocument.getCursor();\n                var before = thedocument.getRange({line:pos.line,ch:0},pos);\n                //regex to find tag segment left of the cursor : <[\\w\\/\\s=\\'\\\"]+$|<[\\w\\/\\s=\\'\\\"]+>$\n                var beforesegment = before.match(/<[\\w\\/\\s=\\'\\\"]+$|<[\\w\\/\\s=\\'\\\"]+>[\\w\\s]*$/);\n                if (beforesegment !== null)\n                {\n                    before = beforesegment[0];\n                }\n                var after = thedocument.getRange(pos,{line:pos.line,ch:null});\n                //regex to find tag segment to the right of cursor : ^[\\w\\/\\s=\\'\\\"]+>|^<[\\w\\/\\s=\\'\\\"]+> \n                var aftersegment = after.match(/^[\\w\\/\\s=\\'\\\"]+>|^<[\\w\\/\\s=\\'\\\"]+>/);\n                if (aftersegment !== null)\n                {\n                    after = aftersegment[0];\n                }\n\n                //search the correct position of the cursor, possibly many similar tags : the index of the search results\n                //array is stored\n                var cursor = editor.getSearchCursor(before);\n                var counter =0 ;\n                var original = {line:10000,ch:10000};\n                var myindex = -1;\n                while (cursor.find() === true)\n                {   \n                    var newval = cursor.to();\n                    if (isTheBetter(pos, newval, original))\n                    {\n                        original = newval;\n                        myindex = counter;\n                    }\n                    counter++;\n                }\n                //now that we know we can find the new cursor position we will format the complete text\n                var settings = StaticDataFactory.getFormattingSettings();\n                thedocument.setValue(html_beautify(thedocument.getValue(),settings));\n\n                //put the cursor back in place\n                cursor = editor.getSearchCursor(before);\n                for(var i=0 ; i < myindex+1 ;i++)\n                {\n                    cursor.find();\n                }\n                if(cursor.to())\n                {\n                    thedocument.setCursor(cursor.to());\n                }\n                editor.focus();\n\n\n                function isTheBetter(newpos, oldpos, standard)\n                {\n                    var linedifference1 = Math.abs(standard.line - oldpos.line);\n                    var linedifference2 = Math.abs(standard.line - newpos.line);\n                    if (linedifference1 > linedifference2)\n                    {\n                        return false;\n                    }\n                    if(linedifference2 > linedifference1)\n                    {\n                        return true;\n                    }\n                    var chardifference1 = Math.abs(standard.ch - oldpos.ch);\n                    var chardifference2 = Math.abs(standard.ch - newpos.ch);\n                    if (chardifference1 > chardifference2)\n                    {\n                        return false;\n                    }\n                    return true;\n                }\n            }\n\n\n            //determines to check a value in the property area because they are obligatory;\n            function checkDefaults(property)\n            {\n                if(property[0] === 'classname' || property[0] === 'className')\n                {\n                    vm.selectedProperties[property[0]] = new attributeObject('className', new Array(property[2]));\n                    return true;\n                }\n                return false;\n            }\n\n\n/*Responds to the arrow button in the navBar. The current selected item and the current selected properties are converted\nto a string and inserted in the editor;*/\n\n            function submitForm()\n\n            {\n\n                if (vm.selectedItem === null || editor.getOption('readOnly') === true)\n                {\n                    return;\n                }\n                if(vm.selectedItem.type === 'snippets')\n                {\n                    void 0;\n                    //loadXml(vm.selectedItem.file);\n                    thedocument.replaceSelection(vm.selectedItem.xml);\n                }\n                else\n                {\n                    var theproperties = [];    \n                    void 0;\n                    if (Object.keys(vm.selectedProperties).length > 0 )\n                    {\n                        Object.keys(vm.selectedProperties).forEach(function(thekey)\n                        {\n                            \n                            theproperties.push(vm.selectedProperties[thekey]);\n                        }); \n                    }\n                   var newtag = new xmlTag(vm.selectedItem.classname, theproperties);\n                    thedocument.replaceSelection(newtag.toCompleteTag());\n                    editor.focus();\n                }\n            }\n        })\n\n    .controller('LoadCredentialsController', function($uibModalInstance, items)\n    {\n        void 0;\n        var vm4 = this;\n        vm4.iaf_url = null;\n        vm4.username = null;\n        vm4.password = null;\n        vm4.submitCredentials = submitCredentials;\n        vm4.closeModal = closeModal;\n\n        function submitCredentials()\n        {\n            void 0;\n            $uibModalInstance.close({iaf_url:vm4.iaf_url, username: vm4.username, password: vm4.password});\n        }\n\n        function closeModal()\n        {\n           $uibModalInstance.dismiss();\n        }\n    })\n\n\n    /*determines which classes are shown in the navigator, based on the JSON item type (pipes, receivers, general or snippets)*/\n    .filter('datasourceFilter', function(StaticDataFactory)\n    {\n        return function(items)\n        {\n            var filtered = [];\n            angular.forEach(items, function(item)\n            {\n               if (item.type === StaticDataFactory.getDataSource())\n                {\n                    filtered.push(item);\n                }\n            });\n            //sorting the resulting array of objects on the classname property.\n            filtered.sort(function(a,b)\n                {\n                    var x = a.classname.toLowerCase();\n                    var y = b.classname.toLowerCase();\n                    if (x < y) {return -1;}\n                    if (x > y) {return 1;}\n                    return 0;\n                });\n            return filtered;\n        };\n    })\n\n\n    //replaces escaped tag signs with the proper symbols, used in the description area where sometimes strange symbols appear.\n    .filter('cleanupFilter', function()\n    {\n        return function(item)\n        {\n\n            if(item !== undefined)\n            {\n                var newstring = item.replace(/&lt;/g,'<');\n                var newerstring = newstring.replace(/&gt;/g,'>');\n                return newerstring;\n            }\n        };\n    });\n\n})();\n(function()\n{\n\t'use strict';\n\nangular.module('confab')\n\n/*Part of the file navigator (node_template.html) changing the name of a file of directory neeeds to be updated\nIn local storage. For this the old and the new name have to be in one place.*/\n.directive('nameGiver', function(StorageFactory)\n        {\n            return{\n                restrict:\"A\",\n                link : function(scope, el , attrs)\n                {\n                    el.bind('blur' , function(event)\n                    {\n                        var digit = event.target.id.match(/\\d+/g)[0];\n                        void 0;\n                        var element = document.getElementById('treeitem' + digit);\n                        var text = element.innerHTML;\n                        var thelist = scope.vm2.list;\n                        void 0;\n                        traverseArray(thelist);\n\n                        function traverseArray(sublist)\n                        {\n                            for(var i = 0 ; i<sublist.length; i++)\n                            {\n\n                                void 0;\n                                //compares int with a string, so NOT === in the comparator\n                                if(sublist[i].id == digit) \n                                {\n\n                                    /*check if there's no sibling node with the same title, otherwise\n                                    we will get name collisions and data loss in the local storage*/\n                                    var theobject = angular.element(element).scope();\n                                    void 0;\n                                    var siblings = theobject.$parentNodesScope.$modelValue;\n                                    for(var s = 0 ; s < siblings.length; s++)\n                                    {\n                                        if(siblings[s].title == text)\n                                        {\n                                            element.innerHTML = cropFilter(theobject.$modelValue.title);\n                                            void 0;\n                                            return;\n                                        }\n                                    }\n\n                                    sublist[i].title = text;\n                                    void 0;\n                                    if(!(sublist[i].isDirectory))\n                                    {\n                                        //changing a filename changes the alias of a storageslot;\n                                        //\"oldname:slot1\" has to become \"newname:slot1\"\n                                        var theslot = StorageFactory.getGetter(scope.vm2.mySlots[digit].title)();\n                                        var oldalias = scope.vm2.mySlots[digit].title;\n                                        StorageFactory.changeKeys(oldalias,text);//keeping track of keys array and currentkey\n                                        StorageFactory.getSetter(oldalias)();//removing old alias\n                                        StorageFactory.getSetter(text)(theslot);//adding the new value\n                                        scope.vm2.mySlots[digit].title = text; //updating the current working files\n                                        var myslots = StorageFactory.getGetter(\"myslots\")();\n                                        myslots[digit].title = text;\n                                        StorageFactory.getSetter(\"myslots\")(myslots);//updating the working files in localstorage\n                                    }\n                                    element.setAttribute('contentEditable', false);\n                                    scope.$apply();\n                                    StorageFactory.getSetter(\"thejson\")(scope.vm2.list);//saving changed json\n                                    break;\n                                }\n                                if(sublist[i].nodes.length > 0)\n                                {\n                                    traverseArray(sublist[i].nodes);\n                                }\n                            }\n                        }\n\n                        function cropFilter(item)\n                        {\n                            if(item === undefined) return \"\";\n                            var helper = item.substring(item.lastIndexOf('/') + 1 ,item.length);\n                            if(helper.length > 0)\n                            {\n                                return helper;\n                            }\n                            else\n                            {\n                                return item;\n                            }\n                        }\n\n\n                    });\n                    el.bind(['keydown'],function(event)\n                    {\n                        var code = event.which || event.keyCode || eventt.charCode ;\n                        void 0;\n                        if (code === 13)// enter key\n                        {\n                            event.preventDefault();\n                            var element = document.getElementById('treeitem'+event.target.id.match(/\\d+/g));\n                            element.blur();\n                        } \n                    });\n                }\n            };\n        })\n\n.directive('propertyListener', function(attributeObject)\n{\n\t\n\treturn{\n\t\tlink : function(scope, elem, attrs)\n\t\t{\n\t\t\telem.bind('click', function(event)\n\t\t\t{\n\t\t\t\tvar heading = document.getElementById('propertyheader');\n\t\t\t\tvar text = document.getElementById('propertytext');\n\t\t\t\tvoid 0;\n\t\t\t\tvar itemnumber = event.target.id.match(/\\d+$/)[0];\n\t\t\t\tvar data = scope.vm.selectedItem.properties[itemnumber];\n\t\t\t\theading.innerHTML = data[0];\n\t\t\t\ttext.innerHTML = data[1];\n\n\t\t\t\tvar elemt = document.getElementById('checkbox' + itemnumber);\n\t\t\t\tvar input = document.getElementById('propertyvalue' + itemnumber);\n\t\t\t\tvar item = scope.vm.selectedItem;\n\n\t\t\t\tvoid 0;\n\n\t\t\t\t/* a checked checkbox will be written onto vm.selectedProperties,\n\t\t\t\twhen it is unchecked we will want to remove it from there. */\n\t\t\t\t\n\t\t\t\tif(typeof (elemt) === 'object')\n\t\t\t\t\tswitch (elemt.checked)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase true :\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvoid 0;\n\t\t\t\t\t\t\tscope.vm.selectedProperties[data[0]] = new attributeObject(data[0], new Array(input.value));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase false : \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvoid 0;\n\t\t\t\t\t\t\tdelete scope.vm.selectedProperties[data[0]];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tvoid 0;\n\n\t\t\t});\n\t\t}\n\n\t};\n})\n\t/* \n\t when the change on the contenteditable happens the model binding has to\n     be invoked; also the property is a key in the attrs object ; so the old key name\n     is replaced by the new one here since at this place only the old and the new\n     value come together.\n     */\n.directive(\"contenteditable\", function() {\n  return {\n    restrict: \"A\",\n    require: \"ngModel\",\n    link: function(scope, element, attrs, ngModel) {\n\n      function read() {\n        ngModel.$setViewValue(element.html());\n      }\n\n      ngModel.$render = function() {\n        element.html(ngModel.$viewValue || \"\");\n      };\n      \n      element.bind(\"keyup change\", function(event) \n      {\n        void 0;\n        var el = event.target.id;\n        if(el !== 'newproperty' && el !== 'newclassname' && el !== 'newdescription')\n        {\n\t        var oldvalue = scope.vm3.selectedItem.properties[scope.vm3.selectedProperty][0];\n\t        scope.$apply(read);\n\t        var newvalue = scope.vm3.selectedItem.properties[scope.vm3.selectedProperty][0];\n\t        var theattrs = scope.vm3.selectedItem.attrs;\n\t        if(newvalue !== oldvalue)\n\t        {\n\t        \tObject.defineProperty(theattrs, newvalue,\n\t        \t\tObject.getOwnPropertyDescriptor(theattrs, oldvalue));\n\t        \tdelete theattrs[oldvalue];\n\t        }\n        }\n        else if(el !== 'newclassname'){\n        \tscope.$apply(read);\n        }\n      });\n      element.bind(\"blur\", function(event) \n      {\n        void 0;\n        var el = event.target.id;\n        \n        if(el === 'newclassname') \n        {\n            var oldvalue = (scope.vm3.selectedItem.classname);\n            scope.$apply(read);\n            var newvalue = (scope.vm3.selectedItem.classname);\n            delete scope.vm3.dataModel[oldvalue];\n            scope.vm3.dataModel[newvalue] = scope.vm3.selectedItem;\n        }      \n        else{\n            scope.$apply(read);\n        }\n      });\n\n    }\n  };\n});\n\n\n\n}());\n(function()\n{\n\t'use strict';\n\tvar app = angular.module('confab');\n\t//TODO add a view and controller functionality to add items to the children array\n\tapp.controller('ModeratorController', function($scope, StaticDataFactory, $uibModal, StorageFactory, ModeratorFactory)\n\t{\n\t\tvar vm3 = this;\n\t\tvm3.showModel = showModel;\n\t\tvm3.deleteProperty = deleteProperty;\n\t\tvm3.changeAttr = changeAttr;\n\t\tvm3.addProperty = addProperty;\n\t\tvm3.addNewClass = addNewClass;\n\t\tvm3.otherSlot = otherSlot;\n\t\tvm3.postDatamonster = postDatamonster;\n\t\tvm3.checkForXml = checkForXml;\n\t\tvm3.postJsonBulk = postJsonBulk;\n\t\tvm3.confirmDelete = confirmDelete;\n\t\t\n\t\tvoid 0;\n\t\tStaticDataFactory.stopTimer();\n\t\t\n\t\tvm3.dataModel = JSON.parse(StaticDataFactory.getStaticJson());\n\t\tvoid 0;\n\t\tvm3.currentSlotNumber = StorageFactory.getCurrentKey().title;\n\t\tvm3.showPropertyDescription= false;\n\t\tvm3.selectedProperty = 0;\n\t\tvm3.addingProperty = false;\n\t\tvm3.newProperty = null;\n\t\tvm3.addingItem = false;\n\t\t\n\t\tif (vm3.dataModel === null)\n\t\t{\n\t\t\t\tvoid 0;\n\t\t\t\tStaticDataFactory.getJson().then(function success(data)\n\t\t\t\t{\n\t\t\t\t\t\tvm3.dataModel = JSON.parse(data.data.JSONMONSTER.MYMONSTER);\n\t\t\t\t\t\tvm3.selectedItem = vm3.dataModel[(Object.keys(vm3.dataModel)[0])];\n\t\t\t\t\t\tvoid 0;\n\t\t\t\t},\n\t\t\t\tfunction error(err)\n\t\t\t\t{\n\t\t\t\t\tvoid 0;\n\t\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvm3.selectedItem = StaticDataFactory.getSelectedItem();\n\t\t\tvoid 0;\n\t\t}\n\n\n\t\tfunction postJsonBulk()\n\t\t{\n\t\t\tModeratorFactory.postJsonBulk(vm3.selectedItem.description);\n\t\t}\n\n\t\tfunction checkForXml()\n\t\t{\n\t\t\tvoid 0;\n\t\t\tStaticDataFactory.loadXml(vm3.selectedItem.classname).then(function success(res)\n\t\t\t{\n\t\t\t\tvm3.selectedItem.xml = res.data;\n\t\t\t});\n\t\t}\n\n\t\tfunction deleteItem()\n\t\t{\n\t\t\tModeratorFactory.deleteItem(vm3.selectedItem.classname).then(function succcess(res)\n\t\t\t\t{\n\t\t\t\t\tvoid 0;\n\t\t\t\t\tvar parking = vm3.selectedItem.classname;\n\t\t\t\t\tdelete vm3.dataModel[parking];\n\t\t\t\t\tvm3.selectedItem = vm3.dataModel[Object.keys(vm3.dataModel)[0]];\n\t\t\t\t},\n\t\t\t\tfunction fail(err)\n\t\t\t\t{\n\t\t\t\t\tvoid 0;\n\t\t\t\t});\n\t\t}\n\n\t\tfunction postJsonMonster()\n\t\t{\n\t\t\tvoid 0;\n\t\t}\n\n\n\n\t\t\n\n\t\tfunction addNewClass()\n\t\t{\n\t\t\tvm3.newProperty = null;\n\t\t\tvm3.addingProperty = false;\n\t\t\tvm3.addingItem = true;\n\t\t\tvm3.dataModel['NEWITEM'] = {classname:\"NEWITEM\",description:\"enter your description here\", type:\"general\",xml:\"\", attrs:{},properties:[]};\n\t\t\tvm3.selectedItem = vm3.dataModel['NEWITEM'];\n\t\t}\n\n\t\tfunction otherSlot()\n\t\t{\n\t\t\tvm3.currentSlotNumber = StorageFactory.switchKey().title;\n\t\t\tvoid 0;\n\t\t\t\n\t\t\tvar myslot = StorageFactory.getGetter(vm3.currentSlotNumber)();\n\n\t\t\tvm3.selectedItem.xml = StorageFactory.getGetter(myslot)();\n\t\t}\n\n\t\tfunction changeAttr(index)\n\t\t{\n\t\t\tvm3.selectedItem.attrs[vm3.selectedItem.properties[index][0]] = new Array(vm3.selectedItem.properties[index][2]);\n\t\t}\n\n\t\tfunction addProperty(string)\n\t\t{\n\t\t\tswitch(string)\n\t\t\t{\n\t\t\t\tcase 'add':\n\t\t\t\t{\n\t\t\t\t\tvm3.newProperty = {propname:\"new_property\",propdes:\"replace with your description\",propdef:\"\"};\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'cancel':\n\t\t\t\t{\n\t\t\t\t\tvm3.newProperty = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'confirm':\n\t\t\t\t{\n\t\t\t\t\tif(vm3.newProperty.propname === \"\" || vm3.newProperty.propdes === \"\")\n\t\t\t\t\t{\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tvm3.selectedItem.attrs[vm3.newProperty.propname] = new Array(vm3.newProperty.propdef);\n\t\t\t\t\tvm3.selectedItem.properties.unshift(new Array(vm3.newProperty.propname,vm3.newProperty.propdes,vm3.newProperty.propdef));\n\t\t\t\t\tvm3.newProperty = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction toggleSpinner()\n\t\t{\n\t\t\tvm3.showSpinner = !vm3.showSpinner;\n\t\t}\n\n\t\tfunction deleteProperty(index)\n\t\t{\n\t\t\tvoid 0;\n\t\t\tdelete vm3.selectedItem.attrs[vm3.selectedItem.properties[index][0]];\n\t\t\tvm3.selectedItem.properties.splice(index,1);\n\t\t}\n\n\t\tfunction showModel()\n\t\t{\n\n\t\t\t//vm3.displayItem = JSON.stringify(vm3.selectedItem,['properties'],4);\n\t\t\t//console.log(vm.displayItem);\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl : \"./views/itemcontents.html\",\n\t\t\t\tcontroller : \"ModalController as vm5\",\n\t\t\t\twindowClass : \"mymodal\",\n\t\t\t\tresolve : {items : function ()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn vm3.selectedItem;\n\t\t\t\t\t}}\n\t\t\t});\n\t\t}\n\n\t\tfunction postDatamonster()\n\t\t{\n\t\t\tvoid 0;\n\t\t\ttoggleSpinner();\n\t\t\tModeratorFactory.postDatamonster(vm3.dataModel).then(function success(res)\n\t\t\t{\n\t\t\t\ttoggleSpinner();\n\t\t\t\tvoid 0;\n\t\t\t}, \n\t\t\tfunction fail(err)\n\t\t\t{\n\t\t\t\ttoggleSpinner();\n\t\t\t\tvoid 0;\n\t\t\t});\n\t\t}\n\n\t\tfunction confirmDelete()\n\t\t{\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl : \"./views/modal_delete_item.html\",\n\t\t\t\tanimation : true,\n\t\t\t\tcontroller : \"Modal2Controller as vm6\",\n\t\t\t\tsize : \"sm\",\n\t\t\t\tbackdrop : \"static\",\n\t\t\t\tresolve : \n\t\t\t\t{\n\t\t\t\t\titem : function ()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn vm3.selectedItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}).result.then(function(result)\n\t\t\t{\n\t\t\t\tvoid 0;\n\t\t\t\tif(result === 'delete')\n\t\t\t\t{\n\t\t\t\t\ttoggleSpinner();\n\t\t\t\t\tModeratorFactory.deleteItem(vm3.selectedItem.classname).then(function succcess(res)\n\t\t\t\t\t{\n\t\t\t\t\t\ttoggleSpinner();\n\t\t\t\t\t\tvoid 0;\n\t\t\t\t\t\tvar parking = vm3.selectedItem.classname;\n\t\t\t\t\t\tdelete vm3.dataModel[parking];\n\t\t\t\t\t\tvm3.selectedItem = vm3.dataModel[Object.keys(vm3.dataModel)[0]];\n\t\t\t\t\t\tpostDatamonster();\n\t\t\t\t\t},\n\t\t\t\t\tfunction fail(err)\n\t\t\t\t\t{\n\t\t\t\t\t\ttoggleSpinner();\n\t\t\t\t\t\tvoid 0;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t})\n\t\n\t.controller('ModalController', function($uibModalInstance, items)\n\t{\n\t\tvar vm5 = this;\n\t\tvm5.closeModal = closeModal;\n\t\tvm5.items = JSON.stringify(items,null, 4);\n\n\t\tfunction closeModal()\n\t\t{\n\t\t\t$uibModalInstance.close();\n\n\t\t}\n\t})\n\n\t.controller('Modal2Controller', function($uibModalInstance, item)\n\t{\n\t\tvar vm6 = this;\n\t\tvm6.closeModal = closeModal;\n\t\tvm6.deleteItem = deleteItem;\n\t\tvm6.item = item;\n\n\t\tfunction closeModal()\n\t\t{\n\t\t\t$uibModalInstance.close(\"cancel\");\n\t\t}\n\n\t\tfunction deleteItem()\n\t\t{\n\t\t\t$uibModalInstance.close(\"delete\");\n\t\t}\n\t});\n}());\n(function()\n{\n\t'use strict';\n\n\tvar app = angular.module('confab');\n\n\tapp.factory('ModeratorFactory', function($http, StorageFactory)\n\t{\n\tvar IAF_URL = StorageFactory.getGetter('IAF_URL')();\t\n\tvar availableLesson = null;\t\n\t\treturn{\n\t\t\tpostJsonBulk : postJsonBulk,\n\t\t\tpostDatamonster : postDatamonster,\n\t\t\tpostSchema : postSchema,\n\t\t\tdeleteItem : deleteItem,\n\t\t\tsetAvailableLesson : setAvailableLesson,\n\t\t\tgetAvailableLessons : getAvailableLessons\n\t\t};\n\n\t\tfunction setAvailableLesson(which)\n\t\t{\n\t\t\tavailableLesson = which;\n\t\t\tvoid 0;\n\t\t}\n\n\t\tfunction getAvailableLessons()\n\t\t{\n\t\t\treturn availableLesson;\n\t\t}\n\n\t\tfunction postJsonBulk(json)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t$http.post(API_URL + '/postJsonBulk', json).then(function success(resp)\n\t\t\t\t\t{\n\t\t\t\t\t\tvoid 0;\n\t\t\t\t\t},\n\t\t\t\t\tfunction failure(err)\n\t\t\t\t\t{\n\t\t\t\t\t\tvoid 0;\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tcatch(err)\n\t\t\t{\n\t\t\t\tvoid 0;\n\t\t\t}\n\t\t}\n\n\n\t\t\n\n        \n        function convertXml(thexml)\n        {\n          \t//console.log(\"slot to convert to json:\", StorageFactory.getGetter(slot)());\n         \treturn $http({method:\"POST\",url: IAF_URL + '/convertToJson',data: thexml ,headers:{\"Content-Type\":'application/xml'} }).then(function(data)\n\t        {\n\t          return data;\n\t        },function(error)\n\t        {\n\t          void 0;\n\t        });\n        }\n\n\n\t\tfunction postSchema()\n\t\t{\n\t\t\t\n\t\t}\n\n\t\tfunction postDatamonster(datamonster, thetag)\n        {\n          void 0;\n          \n          \t  //var helper = JSON.stringify(datamonster);\n          \t  return  $http({method:\"POST\",url:IAF_URL +'/api/storejson',data:datamonster,headers:{'content-type':'application/json'}}).then(function success(resp)\n\t          {\n\t            void 0;\n\t            postTag(thetag);\n\t          },\n\t          function failure(err)\n\t          {\n\t            void 0;\n\t          });\n        }\n\n        function postTag(tag)\n        {\n        \treturn  $http.post(IAF_URL +'/api/postiaftag', tag).then(function success(resp)\n\t          {\n\t            void 0;\n\t          },\n\t          function failure(err)\n\t          {\n\t            void 0;\n\t          });\n        }\n\n\t\t//TODO delete item directly in mongodb\n\t\tfunction deleteItem(classname)\n\t\t{\n\t\t\treturn $http({method:\"GET\", url: IAF_URL + '/api/deleteiaftag/' + classname }).then(\n\t\t\t\tfunction success(res)\n\t\t\t\t{\n\t\t\t\t\treturn res;\n\t\t\t\t}, \n\t\t\t\tfunction failure(err)\n\t\t\t\t{\n\t\t\t\t\treturn err;\n\t\t\t\t});\n\t\t}\n\n\t});\n}());\n(function(){\n\n'use strict';\n    var app = angular.module('confab');\n    app.constant('PROJECTNAME','Ibis4Student');\n    app.constant('API_URL', \"http://localhost:3000\");\n\n\n    app.constant('DOWNLOAD_URL',\"/iaf/api/configurations/download/Ibis4Student\");\n    app.constant('UPLOAD_URL',\"/iaf/api/configurations\");\n    // app.constant('IAF_URL', \"http://ibis4education-env.bz46fawhzf.eu-central-1.elasticbeanstalk.com\");\n\n    // app.constant('DOWNLOAD_URL',\"http://localhost:8080/Ibis4Education/iaf/api/configurations/download/Ibis4Student\");\n    // app.constant('UPLOAD_URL',\"http://localhost:8080/Ibis4Education/iaf/api/configurations\");\n    // app.constant('IAF_URL', \"http://localhost:8080/Ibis4Education/api\");\n    \n    //app.constant('DOWNLOAD_URL',\"http://localhost:8080/Ibis4Education/api/configurations/download/Ibis4Education/\");\n    //http://ibis4education-env.bz46fawhzf.eu-central-1.elasticbeanstalk.com/iaf/api/configurations\n\n\n    app.factory('StaticDataFactory', function(xmlTag, $http, StorageFactory, $interval) \n\n    {\n\n        var datasource = 'pipes';\n        var timerId = 0 ;\n        var themes = [\"twilight\", \"monokai\", \"neat\"];\n        var fontSizes = [12,13,14,15,16,17,18,19,20];\n        var thejson = null;\n        var selectedItem = null;\n        var IAF_URL = StorageFactory.getGetter('IAF_URL')();\n\n        var formattingSettings = {\n                \"indent_size\": 4,\n                \"xml\": {\n                    \"end_with_newline\": true,\n                    \"js\": {\n                        \"indent_size\": 2\n                    },\n                    \"css\": {\n                        \"indent_size\": 2\n                    }\n                },\n                \"css\": {\n                    \"indent_size\": 1\n                },\n                \"js\": {\n                 \"preserve-newlines\": true\n                }\n                };\n\n        return{\n            getJson : getJson,\n            getStaticJson : getStaticJson,\n            // loadXml : loadXml,\n            setDataSource: setDataSource,\n            getDataSource: getDataSource,\n            getFormattingSettings: getFormattingSettings,\n            getThemes: getThemes,\n            getFontSizes: getFontSizes,\n            setTimerId : setTimerId,\n            getTimerId : getTimerId,\n            stopTimer : stopTimer,\n            setSelectedItem : setSelectedItem,\n            getSelectedItem : getSelectedItem,\n            setIafUrl : setIafUrl\n\n        };\n\n        function setIafUrl()\n        {\n          IAF_URL = StorageFactory.getGetter(\"IAF_URL\")();\n        }\n\n        function setSelectedItem(item)\n        {\n          selectedItem = item;\n        }\n\n         function getSelectedItem()\n        {\n          return selectedItem;\n        }\n\n        function setTimerId(timerid)\n        {\n          timerId = timerid;\n        }\n\n        function getTimerId(timerid)\n        {\n          return timerId;\n        }\n\n\n        function stopTimer()\n        {\n          void 0;\n          $interval.cancel(timerId);\n          timerId = 0 ; \n        }\n\n        function getThemes()\n        {\n          return themes;\n        }\n\n        function getFontSizes()\n        {\n          return fontSizes;\n        }\n\n        function getFormattingSettings()\n        {\n          return formattingSettings;\n        }\n\n\n        function setDataSource(string)\n        {\n          datasource = string;\n        }\n\n        function getDataSource()\n        {\n          return datasource;\n        }\n\n\n                /* data is available directly in the response\n          */\n        function getJson()\n        { \n          \n\n          return $http.get(IAF_URL + '/api/getjson').then(\n          function success(data)\n          {\n              void 0;\n              thejson = data.data.JSONMONSTER.MYMONSTER;\n              return data;\n          },\n          function fail(err)\n          {\n            void 0;\n          });\n\n        }  \n\n        //returns the datamodel for the moderatorController\n        function getStaticJson()\n        {\n          return thejson;\n        }\n\n        \n\n        // function loadXml(which)\n        // {\n        //   console.log(\"file to catch:\", which);\n        //   return $http.get(API_URL + '/snippets?resource=' + which ).then(function(data)\n        //     {\n        //       return data;\n        //     },function(error)\n        //     {\n        //       console.log(\"error loading xml\", error);\n        //     });\n        // }\n\n    });\n\n     app.factory('ZipService', function (StorageFactory, $http ,DOWNLOAD_URL, UPLOAD_URL, PROJECTNAME)\n     {\n        var myslots;\n        var IAF_URL = StorageFactory.getGetter('IAF_URL')();\n        return {\n            init : init,\n            getSlots : getSlots,\n            getZip : getZip,\n            getZipFromFile : getZipFromFile,\n            sendZip : sendZip,\n            getMySlots : getMySlots,\n            setIafUrl : setIafUrl\n        };\n\n        function setIafUrl()\n        {\n          IAF_URL = StorageFactory.getGetter('IAF_URL')();\n        }\n\n        function init()\n        {\n            return StorageFactory.getGetter(\"thejson\")();\n        }\n\n        function getSlots()\n        {\n            return StorageFactory.getGetter(\"myslots\")();\n        } \n\n        function getMySlots()\n        {\n            return myslots;\n        } \n\n        function sendZip(saveas)\n        {\n                return new Promise(function(resolve, reject)\n                {\n                var zip = new JSZip();\n                var elements = document.querySelectorAll('[ui-tree-node]');\n                //each tree element gets a filename and we grab the content from storage\n\n\n                elements.forEach(function(item)\n                {\n                    var object = angular.element(item).scope();\n                    var parents = [];\n\n                    while(object.$parentNodeScope !== null)\n                    {\n                        parents.push(object.$parentNodeScope.$modelValue.title);\n                        object = object.$parentNodeScope;\n                    }\n                    //console.log(\"parents of...\", object.$modelValue.title,\"\\n\",parents);       \n\n                    var filename = \"\";\n                    while(parents.length > 0)\n                    {   \n                        filename += cropFilter(parents.pop()) + '/';\n                        // console.log(\"filename: \", filename, \"\\n\");\n                    }\n                    \n\n                    // Het framework wil een configuration file perse met rootfolder hebben, zodoende dit onlogische stukje.\n                    //\"Ibis4Student/\" +\n                    if(cropFilter(angular.element(item).scope().$modelValue.title) === 'Configuration.xml')\n                    {\n                      \n                      filename = \"Ibis4Student/Configuration.xml\";\n                    }\n                    else\n                    {\n                      \n                      filename =  filename + cropFilter(angular.element(item).scope().$modelValue.title) ;\n                    }\n                    // console.log(\"filename finally: \", filename, \"\\n\\n\");\n\n                    if(angular.element(item).scope().$modelValue.isDirectory)\n                    {\n                        // console.log(\"adding directory\", angular.element(item).scope().$modelValue);\n                        zip.folder(filename);\n                    }\n                    else\n                    {   \n                        var theslot = StorageFactory.getGetter(angular.element(item).scope().$modelValue.title)();\n                        zip.file(filename,StorageFactory.getGetter(theslot)());\n                    }\n                });\n                var timestamp = Date.now();\n                var text = \"configuration.version=\" + timestamp;\n                zip.file(\"BuildInfo_SC.properties\" , text);\n\n                void 0;\n                //takes a path pattern and returns the last part: \"dir1/subdir2/myfile.txt\" => \"myfile.txt\"\n               \n               \n                function cropFilter(item)\n                {\n                    if(item === undefined) return \"\";\n                    var helper = item.substring(item.lastIndexOf('/') + 1 ,item.length);\n                    if(helper.length > 0)\n                    {\n                        return helper;\n                    }\n                    else\n                    {\n                        return item;\n                    }\n                }\n\n                if(saveas)//responding to the save button in the treeview using file-saver API\n                {\n                  void 0;\n                  zip.generateAsync({type:\"blob\"}).then(function(myzip)\n                  {\n                    var blob = new Blob([myzip],{type:\"application/zip\"});\n                    void 0;\n                    saveAs(blob, \"configuration.zip\");\n                    resolve();\n                  });\n                }\n                else //sending zip file to IAF\n                {\n                  postConfig(zip, timestamp).then(function success(resp)\n                  {\n                    void 0;\n                    resolve(resp);\n                  },function failure(err)\n                  {\n                    void 0;\n                    reject(err);\n                  });\n                }\n                });\n        }\n\n\n        function postConfig(zip, timestamp)\n        {\n          return new Promise(function(resolve, reject)\n          {\n            if(IAF_URL === undefined || typeof IAF_URL !== 'string')\n            {\n              void 0;\n              return 'error';\n            }\n\n            var finalurl = IAF_URL + UPLOAD_URL;\n            void 0;            \n\n            zip.generateAsync({type:\"blob\"}).then(function(myzip)\n            {\n              var fileName = 'configuration.zip';\n              var fd = new FormData();\n              \n\n              fd.append(\"realm\", 'jdbc');\n              fd.append(\"name\", \"Ibis4Student\");\n              fd.append(\"version\", timestamp);\n              fd.append(\"encoding\", 'utf-8');\n              fd.append(\"multiple_configs\", false);\n              fd.append(\"activate_config\", true);\n              fd.append(\"automatic_reload\", true);\n              fd.append(\"file\", myzip, fileName);\n\n              void 0;\n              $http({method: 'POST',url:finalurl , data: fd , headers:{'Content-type': undefined}})\n              .then(function succes(response)\n              {\n                  void 0;\n                  resolve (response);\n              }, function failure(err)\n              {\n                  void 0;\n                  reject(err);\n              });\n\n              });//end of JSZIP promise\n\n            });//end of new promise\n\n        }\n\n\n        function getZipFromFile(file)\n        {\n          return JSZip.loadAsync(file).then(function(zip)\n            {\n              void 0;\n              StorageFactory.deleteAll();\n              var myzipfiles = [];\n              \n              //removing unwanted entries\n              zip.forEach(function(relativePath, file)\n              {\n                if(file.name.substring(0,2) !== '__' && file.name !== PROJECTNAME +'/' && file.name !== 'BuildInfo_SC.properties')\n                {\n                  myzipfiles.push(file);\n                }\n              });\n              \n              //removing an unwanted wrapper directory ('Ibis4Student/Configuration.xml becomes 'Configuration.xml')\n              for(var i=0 ; i< myzipfiles.length; i++)\n              {\n                if(myzipfiles[i].name.indexOf(PROJECTNAME) > -1)\n                      {\n                        void 0;\n                        var item = myzipfiles[i].name;\n                        var helper = item.substring(item.lastIndexOf('/') + 1 ,item.length);\n                        myzipfiles[i].name = helper;\n                      }\n              }\n\n\n\n\n              /*Write to local storage; to avoid collisions, the calls\n              are made synchronously.*/\n              storeZip(0);\n              \n              function storeZip(index)\n              {\n                if(index > myzipfiles.length-1)\n                {\n                  return;\n                }\n                else\n                {\n                  if(!(myzipfiles[index].dir))\n                  {\n                    myzipfiles[index].async(\"string\").then(function resolve(data)\n                    {\n                        var newslotname = \"slot\" + Math.ceil(Math.random()*1000);\n                        StorageFactory.getSetter(myzipfiles[index].name)(newslotname);\n                        StorageFactory.getSetter(newslotname)(data);\n                        index++;\n                        storeZip(index++);\n                    });\n                  }\n                  else\n                  {\n                    index++;\n                    storeZip(index);\n                  }\n                }\n              }                              \n\n              void 0;\n              var myjson=[];\n              myslots = {};\n\n              //creation of a flat json structure              \n              for(var i =0 ; i< myzipfiles.length ; i++)\n              {\n                if(myzipfiles[i].dir)\n                {\n                    myjson.push({\n                    id : Math.ceil(Math.random() * 10000),  \n                    isDirectory : myzipfiles[i].dir,\n                    title : myzipfiles[i].name.substring(0,myzipfiles[i].name.length-1),\n                    nodes : []\n                    });\n                }\n                else\n                {\n                  var myobj = {\n                    id : Math.ceil(Math.random() * 10000),\n                    isDirectory : myzipfiles[i].dir,\n                    title : myzipfiles[i].name,\n                    nodes : []\n                    };\n                  myjson.push(myobj);\n                  myslots[myobj.id] = {title:myobj.title, isLocked:false};\n                }\n              }\n\n              //sorting the array: highest amount of nodes first .\n              myjson.sort(function compare(val1, val2)\n              {\n                if(val1.title.split('/').length > val2.title.split('/').length)\n                {\n                  return -1;\n                }\n                if(val1.title.split('/').length < val2.title.split('/').length)\n                {\n                  return 1;\n                }\n                return 0;\n              });\n\n                var helper = 0;//emergency variable to prevent a possible eternal loop\n                var parentsfound = true; //escapes the while loop when we had a run with no results\n\n                \n                /*\n                adding children to the parents node arrays; when there is a parent found myjson is changed\n                and we will start the loop again\n                */\n                while(parentsfound &&  helper <100)\n                {\n                  parentsfound = false;\n                  var copy = myjson;\n\n                  for(var index = 0 ; index < myjson.length; index ++)\n                  {\n                    for(var j=0 ; j< copy.length; j++)\n                    {\n                      if(isParent(myjson[index].title, copy[j].title))\n                      {\n                        // console.log(myjson[index].title, \"direct parent of \" ,copy[j].title);\n                        // console.log(\"myjson\",myjson);\n                        myjson[index].nodes.push(copy[j]);\n                        myjson.splice(j,1);\n                        parentsfound = true;\n                        break;\n                      }\n                    }\n                    if(parentsfound)\n                    {\n                      break;\n                    }\n                  }\n                  helper ++;\n                }\n               \n\n\n                /* Main helper function of the recursive loop; \"dir1/dir2/file1.abc\" compared with \"dir1/dir2\" will\n                regard this as a direct parent-child relationship. */ \n                function isParent(possibleparent, candidate)\n                {\n                  if(possibleparent === candidate)\n                  {\n                    return false;\n                  }\n                  var index = candidate.lastIndexOf('/');\n                  if(candidate.substring(0,index) === possibleparent)\n                  {\n                    return true;\n                  }\n                  else\n                  {\n                    return false;\n                  }\n                }\n\n                void 0;\n\n                //saving json and working files structure to local storage, and returning to the caller\n                StorageFactory.getSetter('thejson')(myjson);\n                StorageFactory.getSetter('myslots')(myslots);  \n                return(myjson); \n\n              });//end of jszip async call\n        }\n\n\n\n\n\n\n        /*\n          retrieves IAF configuration zip file via http, and transforms this zipfile  to a json object\n          the zipfiles data are stored in LocalStorage;\n        */\n        function getZip()\n        {\n          var finalUrl = IAF_URL + DOWNLOAD_URL;\n          void 0;\n\n          return $http({method:\"GET\", url: finalUrl, responseType:'arraybuffer'}).then(function success(resp)\n          {\n            return new Promise(function (resolve, reject)\n            {\n            JSZip.loadAsync(resp.data).then(function(zip)\n            {\n              void 0;\n              StorageFactory.deleteAll();\n              var myzipfiles = [];\n              \n              //removing the mac specific entries...don't know whether this is the proper way...\n              zip.forEach(function(relativePath, file)\n              {\n                if(file.name.substring(0,2) !== '__' && file.name !== PROJECTNAME +'/' && file.name !== 'BuildInfo_SC.properties')\n                {\n                  myzipfiles.push(file);\n                }\n              });\n\n              //removing an unwanted wrapper directory ('Ibis4Student/Configuration.xml becomes 'Configuration.xml')\n              for(var i=0 ; i< myzipfiles.length; i++)\n              {\n                if(myzipfiles[i].name.indexOf(PROJECTNAME) > -1)\n                      {\n                        void 0;\n                        var item = myzipfiles[i].name;\n                        var helper = item.substring(item.lastIndexOf('/') + 1 ,item.length);\n                        myzipfiles[i].name = helper;\n                      }\n              }\n\n\n    \n              /*Write to local storage; to avoid collisions, the calls\n              are made synchronously.*/\n              storeZip(0);\n              \n              function storeZip(index)\n              {\n                if(index > myzipfiles.length-1)\n                {\n                  return;\n                }\n                else\n                {\n                  if(!(myzipfiles[index].dir))\n                  {\n                    myzipfiles[index].async(\"string\").then(function resolve(data)\n                    {\n                        var newslotname = \"slot\" + Math.ceil(Math.random()*1000);\n                        StorageFactory.getSetter(myzipfiles[index].name)(newslotname);\n                        StorageFactory.getSetter(newslotname)(data);\n                        index++;\n                        storeZip(index++);\n                    });\n                  }\n                  else\n                  {\n                    index++;\n                    storeZip(index);\n                  }\n                }\n              }                              \n\n              void 0;\n              var myjson=[];\n              myslots = {};\n\n              //creation of a flat json structure              \n              for(var i =0 ; i< myzipfiles.length ; i++)\n              {\n                if(myzipfiles[i].dir)\n                {\n                    myjson.push({\n                    id : Math.ceil(Math.random() * 10000),  \n                    isDirectory : myzipfiles[i].dir,\n                    title : myzipfiles[i].name.substring(0,myzipfiles[i].name.length-1),\n                    nodes : []\n                    });\n                }\n                else\n                {\n                  var myobj = {\n                    id : Math.ceil(Math.random() * 10000),\n                    isDirectory : myzipfiles[i].dir,\n                    title : myzipfiles[i].name,\n                    nodes : []\n                    };\n                  myjson.push(myobj);\n                  myslots[myobj.id] = {title:myobj.title, isLocked:false};\n                }\n              }\n\n              //sorting the array: highest amount of nodes first .\n              myjson.sort(function compare(val1, val2)\n              {\n                if(val1.title.split('/').length > val2.title.split('/').length)\n                {\n                  return -1;\n                }\n                if(val1.title.split('/').length < val2.title.split('/').length)\n                {\n                  return 1;\n                }\n                return 0;\n              });\n\n                var helper = 0;//emergency variable to prevent a possible eternal loop\n                var parentsfound = true; //escapes the while loop when we had a run with no results\n\n                \n                /*\n                adding children to the parents node arrays; when there is a parent found myjson is changed\n                and we will start the loop again\n                */\n                while(parentsfound &&  helper <100)\n                {\n                  parentsfound = false;\n                  var copy = myjson;\n\n                  for(var index = 0 ; index < myjson.length; index ++)\n                  {\n                    for(var j=0 ; j< copy.length; j++)\n                    {\n                      if(isParent(myjson[index].title, copy[j].title))\n                      {\n                        // console.log(myjson[index].title, \"direct parent of \" ,copy[j].title);\n                        // console.log(\"myjson\",myjson);\n                        myjson[index].nodes.push(copy[j]);\n                        myjson.splice(j,1);\n                        parentsfound = true;\n                        break;\n                      }\n                    }\n                    if(parentsfound)\n                    {\n                      break;\n                    }\n                  }\n                  helper ++;\n                }\n               \n\n\n                /* Main helper function of the recursive loop; \"dir1/dir2/file1.abc\" compared with \"dir1/dir2\" will\n                regard this as a direct parent-child relationship. */ \n                function isParent(possibleparent, candidate)\n                {\n                  if(possibleparent === candidate)\n                  {\n                    return false;\n                  }\n                  var index = candidate.lastIndexOf('/');\n                  if(candidate.substring(0,index) === possibleparent)\n                  {\n                    return true;\n                  }\n                  else\n                  {\n                    return false;\n                  }\n                }\n\n                void 0;\n\n                //saving json and working files structure to local storage, and returning to the caller\n                StorageFactory.setCurrentKey(myslots[0]);\n                StorageFactory.getSetter('thejson')(myjson);\n                StorageFactory.getSetter('myslots')(myslots);  \n                resolve(myjson); \n\n              }, \n              function failure(err)\n              {\n                void 0;\n                reject(err);\n              });//end of jszip async call\n\n            });//end of Promise (necessary because of nested promises...)\n\n        },\n        function failure(err)\n        {\n          void 0;\n          return;\n        },function failure(err)\n        {\n          void 0;\n          return;\n        });//end of http);//end of http\n\n      }//end of method getzip\n\n     });//end of factory\n\n\n\n\n    /*\n    facilitates local storage; we can store and retrieve values: storing : StorageFactory.getSetter(key)(value)\n    retrieving : StorageFactory.getGetter(key)() ; removing a key : StorageFactory.getSetter(key)()\n    */\n    app.factory('StorageFactory',['storage', '$log', function(storage, $log)\n    {\n      var api = {};\n      var thekeys;\n      var thealiases = [\"file1\"];\n      var currentKey = \"slot1\";\n      var myaliases;\n      \n      return {\n        getSetter : getSetter,\n        getGetter : getGetter,\n        verifyKey : verifyKey,\n        createAPIForKey : createAPIForKey,\n        createSetter : createSetter,\n        createGetter : createGetter,\n        getAliases : getAliases,\n        switchKey : switchKey,\n        setCurrentKey : setCurrentKey,\n        getCurrentKey : getCurrentKey,\n        getNewSlotname : getNewSlotname,\n        initialise : initialise,\n        deleteAll : deleteAll,\n        changeKeys : changeKeys\n      };\n\n      function changeKeys(oldname, newname)\n      {\n        void 0;\n        var index = -1;\n        var islocked = \"\";\n        for(var i= 0 ; i< thekeys.length ; i++)\n        {\n          if(thekeys[i].title === oldname)\n          {\n            index = i;\n            islocked = thekeys[i].isLocked;\n          }\n        }\n        if(index !== -1)\n        {\n          if(currentKey.title === oldname)\n          {\n            currentKey.title = newname;\n          }\n          thekeys[index].title = newname;\n        }\n        void 0;\n      }\n\n      function deleteAll()\n      {\n        var keys = storage.getKeys();\n        keys.forEach(function(key)\n        {\n          if(key !== 'IAF_URL')\n          {\n            getSetter(key)();\n          }\n        });\n      }\n\n      function switchKey()\n      {\n          var helper = thekeys.shift();\n          thekeys.push(helper);\n          currentKey = thekeys[0];\n          return thekeys[0];\n      }\n\n      //remove from keys array\n      function removeKey(itsAlias)\n      {\n        var index;\n        for(var i =0 ; i< thekeys.length; i++)\n        {\n          if(thekeys[i].title === itsAlias)\n          {\n              index = i;\n          }\n        }\n        thekeys.splice(index, 1);\n\n        if(currentKey.title === itsAlias)//check if the file we're working on is deleted\n        {\n          currentKey = thekeys[0];\n        }\n      }\n\n\n\n\n      //responding to the add new button in the file browser\n      function getNewSlotname(createdAlias, theid)\n      {\n        void 0;\n        var newslotname = \"slot\" + Math.ceil(Math.random()*1000);\n        var theobject = { \"title\" : createdAlias, \"isLocked\" : false };\n        thekeys.push(theobject);\n        getSetter(newslotname)('<?xml version=\"1.0\" encoding=\"UTF-8\"?>');\n        getSetter(createdAlias)(newslotname);\n        var helper = getGetter(\"myslots\")();\n        helper[theid] = theobject;\n        getSetter(\"myslots\")(helper);\n        return newslotname;\n      }\n\n      function initialise()\n      {\n        if(storage.getKeys().length === 0)\n        {\n          getSetter(\"slot1\")(\" start here...\");\n          getSetter(\"file1\")(\"slot1\");\n          var thejson = [\n                          {\n                            \"id\": 1,\n                            \"title\": \"dir1\",\n                            \"isDirectory\": true,\n                            \"nodes\": [\n                              {\n                                \"id\": 2,\n                                \"title\": \"file1\",\n                                \"isDirectory\": false,\n                                \"isLocked\": false,\n                                \"nodes\": []\n                              }\n                            ]\n                          }\n                        ];\n          var myslots = { 2 : {\"title\":\"file1\",isLocked:false} };              \n          getSetter(\"thejson\")(thejson);//setting file structure in localstorage; w\n          getSetter(\"myslots\")(myslots);//setting the open files configuration\n          thekeys = createKeys([\"file1\"]);\n        }\n        else\n        {\n          var helper = storage.getKeys();\n\n          if(helper.indexOf(\"ngIdle.expiry\") > -1)\n          {\n              helper.splice(helper.indexOf(\"ngIdle.expiry\"),1);\n          }  \n\n          if(helper.indexOf(\"thejson\") > -1)\n          {\n              helper.splice(helper.indexOf(\"thejson\"),1);\n          }  \n          if(helper.indexOf(\"myslots\") > -1)\n          {\n              helper.splice(helper.indexOf(\"myslots\"),1);\n          } \n          if(helper.indexOf(\"IAF_URL\") > -1)\n          {\n              helper.splice(helper.indexOf(\"IAF_URL\"),1);\n          } \n\n          thekeys = createKeys(helper); \n        }\n        currentKey = thekeys[0];\n      }\n\n\n      function getAliases()\n      {\n        var output = [];\n\n        thealiases.forEach(function(value)\n        {\n          output.push(getGetter(value)());\n        });\n\n      return output;  \n      }\n\n\n      //current key is an object { title:\"\", isLocked: bool }\n      function setCurrentKey(key)\n      {\n       void 0; \n        currentKey = key;\n      }\n\n      function getCurrentKey()\n      {\n        //console.log(\"currentkey::\", currentKey);\n        return currentKey;\n      }      \n\n\n      function createKeys(helper)\n      {\n        var result = [];\n        helper.forEach(function(val)\n        {\n          if(val.substring(0,4) !== 'slot' )\n          {\n            result.push({\"title\" : val, \"isLocked\" : false});\n          }\n        });\n        return result;\n      }\n\n      function getSetter(key)\n      {\n        verifyKey(key);\n        return api[key].setter;\n      }\n      function getGetter(key)\n      {\n        verifyKey(key);\n        return api[key].getter;\n      }\n\n      function verifyKey(key)\n      {\n        if(!key || angular.isUndefined(key))\n        {\n          throw new Error(\"Key[ \" + key + \" ] is invalid\");\n        }\n\n        if(!api.hasOwnProperty(key))\n        {\n          createAPIForKey(key);\n        }\n\n\n      }\n\n      function createAPIForKey(key)\n      {\n        var setter = createSetter(key);\n        var getter = createGetter(key);\n        api[key] = \n        {\n          setter : setter,\n          getter : getter\n        };\n      }\n\n      function createSetter(key)\n      {\n        return function(value)\n        {\n          if(angular.isDefined(value))\n          {\n            try\n            {\n              storage.set(key, value);\n            }\n            catch(error)\n            {\n              $log.info('[StorageFactory]' + error.message);\n            }\n          }\n          else\n          {\n            storage.remove(key);\n          }\n        };\n      }\n\n      function createGetter(key)\n      {\n        return function()\n        {\n          var value = storage.get(key);\n          if(value === null)\n          {\n            value = undefined;\n            var setter = api[key].setter;\n            setter(value);\n          }\n          return value;\n        };\n      }\n    }]);\n    app.factory('EditorFactory', function()\n    {\n    var editor = null;  \n      \n      return {\n        editorLoaded : editorLoaded\n      };\n\n      function editorLoaded(_editor)\n      {\n                var _doc = _editor.getDoc();\n                _editor.focus();\n                _editor.setOption('lineNumbers', true);\n                _editor.setOption('lineWrapping', true);\n                _editor.setOption('mode', 'xml');\n                _editor.setOption('beautify', 'true');\n                _editor.setOption('theme', 'twilight');\n                _editor.setOption('foldGutter', true);\n                _editor.setOption('gutters',[ \"CodeMirror-linenumbers\",\"CodeMirror-foldgutter\"]);\n                _editor.setOption('matchTags', {bothTags: true});\n                var extraKeys =  {\n                          \"'<'\": completeAfter,\n                          \"'/'\": completeIfAfterLt,\n                          \"' '\": completeIfInTag,\n                          \"'='\": completeIfInTag,\n                          \"Ctrl-Space\": \"autocomplete\"\n                                };\n                _editor.setOption('extraKeys', extraKeys);\n\n                void 0;\n\n                var windowheight = window.innerHeight;\n                var navbarheight = document.getElementById('mynavbar').offsetHeight;\n                var ed = document.querySelector('.CodeMirror');\n                ed.style.height = (windowheight - navbarheight) + 'px'; \n                void 0;\n\n                function completeAfter(cm, pred) \n                {\n                    var cur = cm.getCursor();\n                    if (!pred || pred()) setTimeout(function() \n                    {\n                        if (!cm.state.completionActive)\n                        cm.showHint({completeSingle: false});\n                    }, 100);\n                    return CodeMirror.Pass;\n                }\n\n                function completeIfAfterLt(cm) \n                {\n                    return completeAfter(cm, function() \n                    {\n                        var cur = cm.getCursor();\n                        return cm.getRange(CodeMirror.Pos(cur.line, cur.ch - 1), cur) == \"<\";\n                    });\n                }\n\n                function completeIfInTag(cm) \n                {\n                return completeAfter(cm, function() \n                {\n                    var tok = cm.getTokenAt(cm.getCursor());\n                    if (tok.type == \"string\" && (!/['\"]/.test(tok.string.charAt(tok.string.length - 1)) || tok.string.length == 1)) return false;\n                    var inner = CodeMirror.innerMode(cm.getMode(), tok.state).state;\n                    return inner.tagName;\n                });\n\n              }\n              return _editor;\n            }\n\n    });\n    app.factory('ValidationFactory', function(StorageFactory, $http )\n    {\n      return {\n        validateXml : validateXml\n      };\n\n      function validateXml()\n      {\n\n          // return $http.get(API_URL + '/validate').then(function succes(res)\n          // {\n          //   var thexml = StorageFactory.getGetter(StorageFactory.getCurrentKey())();\n          //   console.log(\"xsd:\\n\",  res);\n          //   console.log(\"xml:\\n\", typeof thexml);\n          //   var message = validateXML(thexml, res.data);\n          //   return message;\n          // },\n          // function fail(err)\n          // {\n          //   console.log(\"failure....\", err);\n          //   return err;\n          // });  \n      }\n    });\n    app.factory('IafFactory', function($http, StorageFactory, StaticDataFactory, ZipService, UPLOAD_URL)\n    {\n      \n    var uname = null;\n    var pw = null;\n    var IAF_URL = StorageFactory.getGetter('IAF_URL')();\n      return{\n        postConfig : postConfig,\n        setCredentials : setCredentials,\n      };\n\n      //resonding to the paperplane button upper right\n      function postConfig(zip)\n      {\n        return new Promise(function(resolve, reject)\n        {\n          var finalurl = IAF_URL + UPLOAD_URL;\n          void 0;\n        zip.generateAsync({type:\"blob\"}).then(function(myzip)\n        {\n          var fileName = 'configuration.zip';\n          var fd = new FormData();\n          fd.append(\"realm\", 'jdbc');\n          fd.append(\"name\", \"Ibis4Student\");\n          fd.append(\"version\", 1);\n          fd.append(\"encoding\", 'utf-8');\n          fd.append(\"multiple_configs\", false);\n          fd.append(\"activate_config\", true);\n          fd.append(\"automatic_reload\", true);\n          fd.append(\"file\", myzip, fileName);\n\n\n          return new Promise(function(resolve, reject)\n          {\n             void 0;\n              return $http({method: 'POST',url:finalurl , data: fd , headers:{'Content-type': undefined}}\n                  ).then(function succes(response)\n                  {\n                      void 0;\n                      resolve (response);\n                  }, function failure(response)\n                  {\n                      void 0;\n                      reject(response);\n                  });\n                });           \n          });\n        resolve();\n        });\n\n\n\n      }\n\n      //responding to the submit button in the authentication area.\n      function setCredentials(server, uname, pw)\n      {\n        void 0;\n        return new Promise(function(resolve, reject)\n        {\n          if (server)\n          {\n            void 0;\n            IAF_URL = server;\n            StorageFactory.getSetter('IAF_URL')(server);\n            StaticDataFactory.setIafUrl();\n            if(StaticDataFactory.getStaticJson() === null || StaticDataFactory.getStaticJson() === undefined)\n            {\n              StaticDataFactory.getJson().then(function success(resp)\n              {\n                void 0;\n                resolve(resp);\n              },\n              function failure(err)\n              {\n                 void 0;\n                 reject(err);\n              });\n            }\n          }\n          else\n          {\n            void 0;\n          }\n        });\n      }\n    });\n\n})();   \n(function ()\n{\n    'use strict';\n    /*TODO's : adding new directory / new file button*/\n    angular.module('confab')\n        .controller('ApsTreeController', function ($scope,$uibModal, ZipService, StorageFactory,StaticDataFactory, IafFactory,$timeout)\n        {\n\n            void 0;\n            var vm2 = this;\n            vm2.remove = remove;\n            vm2.toggle = toggle;\n            vm2.setSelectedSlot = setSelectedSlot;//is a number , the id of a node file object.\n            vm2.changeName = changeName;\n            vm2.newSubitem = newSubitem;\n            vm2.modifyAlias = modifyAlias;\n            vm2.getZip = getZip;\n            vm2.addFileOrFolder = addFileOrFolder;\n            vm2.saveToFile= saveToFile;\n            vm2.showZipDialog = showZipDialog;\n\n            //is called in home.html\n            vm2.treeOptions =\n            {\n                   \n            };\n\n            init();\n\n            function showZipDialog()\n            {\n\n                var modalInstance = $uibModal.open(\n                {\n                    templateUrl : \"./views/loadzipdialog.html\",\n                    controller : \"LoadZipController as vm3\",\n                    size : \"md\",\n                    resolve : {items : function ()\n                        {\n                            return \"something\";\n                        }}\n                });\n\n                \n                //sets a listener on the load from file button;\n                modalInstance.rendered.then(\n                function success(resp)\n                {\n                var zipfromfile = document.getElementById('zipfromfile');\n                void 0;\n                zipfromfile.addEventListener('change', function(event)\n                {\n                    void 0;\n                    modalInstance.close({returntype:\"viafile\"});\n                    StaticDataFactory.stopTimer();\n                    ZipService.getZipFromFile(event.target.files[0]).then(function success(resp)\n                    {\n                        void 0;\n                        vm2.list = resp;\n                        void 0;\n                        vm2.mySlots = ZipService.getMySlots();\n                        var keys = Object.keys(vm2.mySlots);\n                        StorageFactory.setCurrentKey(vm2.mySlots[keys[0]]);\n                        setSelectedSlot({id:keys[0]});\n\n                        //$scope.$emit('Keychange');                         \n\n                    },function failure(err)\n                    {\n                        void 0;\n                    });\n\n                });    \n                },function failure(err)\n                {\n                    \n                });\n\n\n\n\n                modalInstance.result.then(function success(resp)\n                {\n                    void 0;\n                    if(resp.returntype === 'viahttp')\n                    {\n                        vm2.list = resp.data;\n                        vm2.mySlots = ZipService.getMySlots();\n                        var keys = Object.keys(vm2.mySlots);\n                        setSelectedSlot({id:keys[0]}) ;\n                        void 0;\n                    }\n\n                    },function failure(err)\n                    {\n                        void 0;\n                    });\n            }\n\n\n            function saveToFile()\n            {\n                ZipService.sendZip(true).then(function success(resp)\n                {\n                    void 0;    \n                },\n                function failure(err)\n                {\n                    void 0;\n                });\n            }\n\n            function addFileOrFolder(item)\n            {\n                var thetype = (item === 'file'? false : true);\n\n\n               var newobject = {\n                            id: Math.floor(Math.random()*10000) ,\n                            title: item + createRandomSuffix(),\n                            isDirectory : thetype,\n                            isLocked : false,\n                            nodes: []\n                            };\n               vm2.list.push(newobject);\n               if(item === 'file')\n               {\n                   StorageFactory.getNewSlotname(newobject.title, newobject.id);\n                   vm2.mySlots[newobject.id] = {\"title\" : newobject.title,\"isLocked\": false};\n                   setSelectedSlot(newobject);\n               }\n            }\n\n\n\n\n            function init()\n            {\n                vm2.list = StorageFactory.getGetter(\"thejson\")();\n                vm2.mySlots = StorageFactory.getGetter(\"myslots\")();\n            }\n\n\n\n            function getZip()\n            {\n                void 0;\n                ZipService.getZip().then(function success(data)\n                {\n                    void 0;\n                    vm2.list = data;\n                    vm2.mySlots = ZipService.getMySlots();\n                    var keys = Object.keys(vm2.mySlots);\n                    setSelectedSlot({id:keys[0]}) ;\n                    void 0;\n                    //$timeout(changeTheNames, 1000);//waiting for the scope to have settled;otherwise view is ok but scope not parallel\n                }, function fail(err)\n                {\n                    void 0;\n                });\n            }\n\n            //listens to a button press on the key icon in the main controller and updates the model\n            $scope.$on('KeySwitch', function(event, key)\n            {\n                var thekeys = Object.keys(vm2.mySlots);\n                void 0;\n                for(var i=0 ;i < thekeys.length; i++)\n                {\n                    // console.log(i , \" : \", vm2.mySlots[thekeys[i]]);\n\n                    if(vm2.mySlots[thekeys[i]].title == key.title)\n                    {\n                        void 0;\n\n                        var helper = \n                        {\n                            id:thekeys[i],\n                            title:thekeys[i].title,\n                            isLocked:thekeys,\n                            nodes:[],\n                            isDirectory:false\n                        };\n\n                        setSelectedSlot(helper);\n                    }\n                }\n\n            });\n\n            $scope.$watch('vm2.selectedSlot', function()\n            {\n                void 0;\n            });\n\n            //Any change in the file tree is saved in localstorage to reload later\n            $scope.$watch('vm2.list', function()\n            {\n                void 0;\n                StorageFactory.getSetter(\"thejson\")(vm2.list);\n            }, true);\n\n            //responds to change of the slotname : internally the slotnames are slot1, slot2...etc,\n            //externally a user can choose any alias he wants.\n            function modifyAlias(slotn, newname)\n            {\n                void 0;\n                StorageFactory.getSetter(slotn)(newname);\n            }\n\n\n\n            function setSelectedSlot(object)\n            {\n                    void 0;\n                if(object.hasOwnProperty('id'))\n                {\n                    $scope.$emit('saveOldValues');\n                    vm2.selectedSlot = object.id;\n                    StorageFactory.setCurrentKey(vm2.mySlots[vm2.selectedSlot]);\n                    $scope.$emit('Keychange');\n                }\n                else\n                {\n                    if(!(object.isDirectory))\n                    {\n                        $scope.$emit('saveOldValues');\n                        //vm2.selectedSlot = object.id;\n                        vm2.selectedSlot = object.$modelValue.id;\n                        StorageFactory.setCurrentKey(vm2.mySlots[vm2.selectedSlot]);\n                        $scope.$emit('Keychange');\n                    }\n                }    \n                void 0;\n            }\n\n\n            /* Sets the name of the tree item contenteditable and places the caret; \n            On enter or on blur the nameGiver directive updates the model with the current viewvalue.\n            */\n            function changeName(item)\n            {\n                var element = document.getElementById('treeitem' + item.$modelValue.id);\n                element.setAttribute('contentEditable', true);\n                var textnode = element.firstChild;\n                var caret = textnode.length;\n                var range = document.createRange();\n                range.setStart(textnode, 0);\n                range.setEnd(textnode, caret);\n                var sel = window.getSelection();\n                sel.removeAllRanges();\n                sel.addRange(range);\n                void 0;\n                element.focus();\n            }\n\n\n            /*\n                Removes an item from the tree after checking if the user doesn't check the last item.\n                Also the corresponding slot must be deleted and the model updated accordingly.\n                object one level higher in the hierarchy: object.$parentNodeScope\n                siblings of the current object : object.$parentNodesScope.$modelValue   (note the small 's' difference)\n            */\n            function remove(object)\n            {\n                var theid = object.$modelValue.id;\n                var parking = getRoot(object);\n                var nodetype = object.$modelValue.isDirectory;\n                var counter = 0;\n\n                if(nodetype)//if it is a directory we want to remove\n                {\n                    var currentLayer = object;\n\n                    while(currentLayer !== null && counter < 10)\n                    {\n                          if(lookForDirectory(currentLayer.$parentNodesScope.$modelValue, object.$modelValue.id))\n                            {\n                                void 0;\n                                var results = deleteContainingFiles(object);\n                                void 0;\n                                \n                                //checking for the case that no files are left after this deletion\n                                //updating the mySlots object with the current slots.\n                                if(results.length < Object.keys(vm2.mySlots).length)\n                                {   \n                                    results.forEach(function(item)\n                                    {\n                                        deleteFromLocalStorage(item);\n                                        delete vm2.mySlots[item];\n                                    });\n                                    object.remove();\n                                }\n                                break;\n                            }\n                          else\n                          {\n                            currentLayer = currentLayer.$parentNodeScope;\n                            void 0;\n                          }    \n                          counter++;\n                    }\n                }\n                else//if it is a file we want to remove\n                {\n                    if(traverseArray(parking.$parentNodesScope.$modelValue, false))\n                    {\n                        void 0;\n                        deleteFromLocalStorage(object.$modelValue.id);\n                        delete vm2.mySlots[object.$modelValue.id]; //remove from the slots\n                        object.remove(); //remove from the filetree\n                    }\n                }\n\n                function deleteFromLocalStorage(itsid)\n                {\n                    var thealias = vm2.mySlots[itsid].title;\n                    var theslot = StorageFactory.getGetter(thealias)();\n                    void 0;\n                    StorageFactory.getSetter(thealias)();\n                    StorageFactory.getSetter(theslot)();\n                    var myslots = StorageFactory.getGetter(\"myslots\")();\n                    delete myslots[itsid];\n                    StorageFactory.getSetter(\"myslots\")(myslots);\n                }\n\n\n                function deleteContainingFiles(object)\n                {\n                    var results = [];\n                    void 0;\n                    var array = object.$childNodesScope.$modelValue;\n\n                    findResults(array);\n\n                    function findResults(sublist)\n                    {\n                        for(var i=0 ; i< sublist.length; i++)\n                        {\n                            if(!(sublist[i].isDirectory))\n                            {\n                                results.push(sublist[i].id);\n                            }\n                            else\n                            {\n                                if(sublist[i].nodes.length > 0)\n                                {\n                                    findResults(sublist[i].nodes);   \n                                }\n                            }\n                        }\n                    }\n                     return results;  \n                }\n\n                function getRoot(obj)\n                {\n                    var parking = obj;\n                    while(parking.$parentNodeScope !== null)\n                    {\n                        parking = parking.$parentNodeScope ;\n                    }\n                    void 0;\n                    return parking;\n                }\n\n                function traverseArray(sublist, ok)\n                {\n                    \n                    if(ok){return ok;}\n                    for(var i = 0 ; i<sublist.length; i++)\n                    {\n                        void 0;\n                        if(!(sublist[i].isDirectory) && sublist[i] !== object.$modelValue) \n                        {\n                            void 0;\n                            ok = true;\n                            break;\n                        }\n                        else\n                        {\n                            if(sublist[i].nodes.length > 0)\n                            {\n                                ok = traverseArray(sublist[i].nodes, ok);\n                            }\n                        }\n                    }\n                    return ok;\n                } \n\n                function lookForDirectory(sublist, callerid)\n                {\n                    for (var i = 0 ; i < sublist.length ; i ++)\n                    {\n                        if(sublist[i].isDirectory && sublist[i].id !== callerid)\n                        {\n                            void 0;\n                            return true;\n                        }\n                    }\n                }                 \n\n                \n            }\n\n            function toggle(item)\n            {\n               item.toggle();\n            }\n\n            function newSubitem(item)\n            {\n                //console.log(\"parent:\",item.$parent.$parent.$parent.$parent.$modelValue.title);\n                var theitem = item.$modelValue;\n                void 0;\n\n                if(theitem.isDirectory)\n                {\n                    theitem.nodes.push({\n                    id: Math.floor(Math.random()*10000) ,\n                    title: theitem.title ,\n                    isDirectory : true,\n                    nodes: []\n                    });\n                }\n                else\n                {\n                    var theid = Math.floor(Math.random()*10000);\n                    var thetitle = theitem.title + '-' + createRandomSuffix();\n                    var newobject = {\n                            id: theid ,\n                            title: thetitle,\n                            isDirectory : false,\n                            isLocked : false,\n                            nodes: []\n                            };\n\n\n                    if(item.$parentNodeScope !== null)\n                    {\n                        item.$parentNodeScope.$modelValue.nodes.push(newobject);\n                    }\n                    else\n                    {\n                        vm2.list.push(newobject);\n                    }\n                    // console.log(\"item:\", item);\n                    // console.log(\"theid \", theid);\n                    StorageFactory.getNewSlotname(thetitle, theid);\n                    vm2.mySlots[theid] = {\"title\" : thetitle,\"isLocked\": false};\n                    setSelectedSlot(newobject);\n                }\n            }\n\n\n            function createRandomSuffix()\n            {\n                var suffixes = \"abcdefghijklmnopqrstuvwxyzABCDEFGHILJKLMNOPRSTUVWXYZ\";\n                var result = \"\";\n                for(var i=0 ; i<3; i++)\n                {\n                    var randomdigit = Math.floor(Math.random()*suffixes.length);\n                    var letter = suffixes.substring(randomdigit,randomdigit + 1);\n                    result += letter;\n                }\n                return result;\n            }\n\n\n        })\n\n        //controls the modal that appears when you're loading a zip\n        .controller('LoadZipController', function($uibModalInstance, ZipService, items)\n            {\n                var vm3 = this;\n                vm3.closeModal = closeModal;\n                vm3.getZipOverHttp = getZipOverHttp;\n\n                function getZipOverHttp()\n                {\n                    void 0;\n                    ZipService.getZip().then(function success(data)\n                    {\n                        void 0;\n                        $uibModalInstance.close({returntype:\"viahttp\",data:data});\n                        \n                    }, function fail(err)\n                    {\n                        void 0;\n                    });\n                }                \n\n                \n\n                function closeModal()\n                {\n                    $uibModalInstance.close(\"dialog cancelled.\");\n                }\n            })\n\n\n\n        //Returns the part after the last slash of a file.\n        .filter('cropFilter', function()\n        {\n            return function(item)\n            {\n                if(item === undefined) return \"\";\n                var helper = item.substring(item.lastIndexOf('/') + 1 ,item.length);\n                if(helper.length > 0)\n                {\n                    return helper;\n                }\n                else\n                {\n                    return item;\n                }\n            };\n        });\n\n})();\n\n(function ()\n{\n    \n/*\n    Defines an xmlTag object that will be used as the main data carrier in the editor;\n*/\nangular.module('confab')\n\n    .factory('xmlTag', function() \n        {\n        /*\n        tagTypes are \"STARTTAG\", \"COMBITAG\", and \"ENDTAG\"\n        */\n\n        var staticPipenames = [\"FixedQuerySender\", \"XmlWellFormedChecker\",\"XmlValidator\",\"XmlSwitch\",\"XmlIf\",\"WsdlXmlValidator\",\"RemoveFromSession\",\"PutSystemDateInSession\",\"PutInSession\",\"MailSender\",\"LogSender\",\"Json2XmlValidator\",\"JmsCommunicator\",\"PutParametersInSession\",\"IsolatedServiceExecutor\",\"IsolatedServiceCaller\",\"IfMultipart\",\"GetFromSession\",\"FixedResultSender\",\"FixedResult\",\"FilenameSwitch\",\"XmlParamSwitch\",\"EchoSender\"];\n\n\n        function xmlTag(elementname, proparray) \n        {\n            this.tagType = \"STARTTAG\";\n            this.elementName = elementname;\n            tagProperties = {};\n            proparray.forEach(function(prop)\n            {\n                tagProperties[prop.getAttributeName()] = prop.getAttributeValues();\n            }); \n            this.tagProperties = tagProperties; \n        }\n        //native functions of the xmlTag that can access the instance properties\n        xmlTag.prototype = \n        {\n            getTagType : function()\n            {\n                return this.tagType;\n            },\n            setTagType : function(astring)\n            {\n                switch (astring)\n                {\n                    case \"STARTTAG\":{this.tagType = \"STARTTAG\"; break;}\n                    case \"COMBITAG\":{this.tagType = \"COMBITAG\";break;}\n                    case \"ENDTAG\":{this.tagType = \"ENDTAG\";break;}\n                    default :{void 0;\n                                this.tagType = \"STARTTAG\";}\n                }\n            },\n            toCompleteTag : function()\n            {\n                var returnstring = \"\";  \n                var itsproperties = \"\"; \n                this.convertToPipe();\n                \n                angular.forEach(this.tagProperties, function(value, key)\n                {\n                    if (value == \"\")\n                    {\n                        itsproperties += \" \" + key + \"=\\\"\\\" \" + \" \";\n                    }\n                    else\n                    {\n                        itsproperties += \" \" + key + \"=\\\"\" + value + '\\\"';   \n                    }\n\n                });\n             returnstring =                     \"<\" + \n                                        this.elementName + \n                                        itsproperties + \n                                        \"></\" +\n                                        this.elementName + \n                                        \">\" ;\n                                           \n\n             return returnstring;                           \n\n\n            },\n            //converts its contents to a readable xml-tag, dependent on its type\n            toObject : function()\n            {\n                var theobject = {} ;\n                theobject[this.elementName] = this.tagProperties;\n                void 0;\n                return theobject;\n            },\n            setProperty :function (key, value)\n            {\n                this.tagProperties[key] = value;\n            },\n            getPropertyValue :function (key)\n            {\n                return this.tagProperties[key];\n            },\n            //necessary while waiting for new IAF release; for now these elements have\n            //a default classname attached.\n            convertToPipe: function()\n            {\n                if (this.elementName.search( /^.*Pipe$/ ) !== -1)\n                {\n                    this.elementName = \"pipe\"; \n                }\n\n                if(staticPipenames.includes(this.elementName))\n                {\n                    this.elementName = \"pipe\";    \n                }\n\n                var regex = \"/^.*Pipe$/\";\n                void 0;\n\n            }\n\n        };\n       /*static functions that have no access to this:\n        xmlTag.computeTabdistance = function(tag)\n        {\n            return tabdistance\n        }\n       */\n        return (xmlTag);\n        })\n\n    .factory('attributeObject', function()\n    {\n        function attributeObject(attributename, values, hasDefault)\n        {\n            this.name = attributename;\n            \n            if(values !== undefined)\n            {\n                this.values = values;\n            }\n            else\n            {\n                this.values = [];\n            }\n            if (hasDefault !== undefined)\n            {\n                this.hasDefault = hasDefault;\n            }\n            else \n            {\n                this.hasDefault = false;\n            }\n        }\n\n        attributeObject.prototype = \n        {\n            setAttributeValue : function(value)\n            {\n                if (this.hasDefault)\n                {\n                    this.values.unShift(value);\n                }\n                else \n                {\n                    this.values.push(value);\n                }\n            },\n\n            //insert a whole array\n            insertValues : function(array)\n            {\n               this.values = array; \n            },\n\n            getAttributeName : function()\n            {\n                return this.name;\n            },\n\n            //returns an array of possible values \n            getAttributeValues : function()\n            {\n                return this.values;\n            },\n            \n            setDefaultValue : function(bool)\n            {\n                this.hasDefault = bool ;\n            },\n\n            toString : function()\n            {\n                return this.name + 'Allowed values:' + this.values.join();\n            }\n        };\n\n\n        return(attributeObject);\n\n        \n\n\n\n\n\n    });\n\n})();"],"sourceRoot":"/source/"}